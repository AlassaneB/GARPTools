% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/splitData.R
\name{splitData}
\alias{splitData}
\title{Splits presence locations into training and testing data sets for use by DesktopGARP}
\usage{
splitData(points, p, type = c("train", "test", "all"), iterations = 1,
  output = TRUE, output.path)
}
\arguments{
\item{points}{a data.frame object containing latitude and longitude values of presence locations}

\item{p}{a numeric value specifying the precentage of locations to keep for training}

\item{type}{a character value specifying which points should be returned: training ("train"), testing ("test"), or both ("all")}

\item{iterations}{a numeric value specifying how many resampling events should be run; defaults to 1}

\item{output}{logical. Should the datasets be saved to file?}

\item{output.path}{a file path specifying the file name of the objects to be saved. "_train" or "_test" will be appended to file name (e.g. "C:/Users/Homo_sapiens_test.shp")}
}
\value{
A list object containing data.frames for training locations (when \code{type = "train"}), testing locations (when \code{type = "test"}), or both (when \code{type = "all"}). When output = TRUE, outputs both a .xls and shapefile to specified file path.
}
\description{
\code{splitData} Uses a user-defined precentage to split presence locations into training and testing datasets. Both are output as .xls files (for use in DesktopGARP) and a shapefile object (for testing using \code{\link{aucGARP}}).
}
\details{
Use the \code{iterations} element when performing multiple experiments in DesktopGARP. The function will return a single .xlsx datasheet with all training data combined for use by DesktopGARP, with
the "Species" vector containing the species name from the \code{points} object with the iteration number attached (e.g. "Homo_sapiens1_train", "Homo_sapiens2_train", "Homo_sapiens_train3_train", etc.).

NOTE: The \code{splitData} function uses elements of the ".xlsx" package, which requires an installation of Java with the same version as RStudio. If this prompts an error with ".xlsx," the easiest fix is to work from the 32-bit version of RStudio.
}
\examples{
  hs <- data.frame("Latitude" = c(-89, 72, 63, 42, 54), "Longitude" = c(-12, 13, 24, 26, 87), "Species" = rep("Homo sapiens", 5))
  splitData(points = hs, p = 0.7, type = "all")

}
